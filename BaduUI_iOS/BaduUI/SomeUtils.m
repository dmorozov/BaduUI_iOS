//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/dmorozov/Work2/GradleDemo/JavaLibrary/src/main/java/com/badu/SomeUtils.java
//

#include "J2ObjC_source.h"
#include "SomeUtils.h"

@implementation BaduSomeUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  BaduSomeUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)echoWithNSString:(NSString *)text {
  return BaduSomeUtils_echoWithNSString_(text);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(echoWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "echo", "LNSString;" };
  static const J2ObjcClassInfo _BaduSomeUtils = { "SomeUtils", "com.badu", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_BaduSomeUtils;
}

@end

void BaduSomeUtils_init(BaduSomeUtils *self) {
  NSObject_init(self);
}

BaduSomeUtils *new_BaduSomeUtils_init() {
  J2OBJC_NEW_IMPL(BaduSomeUtils, init)
}

BaduSomeUtils *create_BaduSomeUtils_init() {
  J2OBJC_CREATE_IMPL(BaduSomeUtils, init)
}

NSString *BaduSomeUtils_echoWithNSString_(NSString *text) {
  BaduSomeUtils_initialize();
  return JreStrcat("$$", @"Echo: ", text);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(BaduSomeUtils)

J2OBJC_NAME_MAPPING(BaduSomeUtils, "com.badu", "Badu")
